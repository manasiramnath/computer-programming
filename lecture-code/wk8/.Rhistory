knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(dplyr)
# load wave 7
load("wave7.rdata")
wv7 <-`WVS_Cross-National_Wave_7_v5_0`
rm(`WVS_Cross-National_Wave_7_v5_0`)
# subset wave 7 to variables of interest
w7 <- wv7[, c("B_COUNTRY_ALPHA", "A_YEAR", "Q108", "Q288", "Q287","Q240", "Q110", "Q279", "Q97", "Q94", "Q275R", "Q260", "Q262", "Q273")]
colnames(w7) <- c("country","year","redistribution","subj_inc","class","ideology","meritocracy","employment_status","union_membership","religious_membership","education","gender","age","marital_status")
length(unique(w7$country)) #64
# recode missing values
for (i in 3:14) {
w7[,i][w7[,i] < 0] <- NA
}
w7 <- na.omit(w7)
# removing countries with high levels of missingness on key variables
w7 <- w7 %>% filter(!(country %in% c("CHN","EGY","IRN","IRQ","JOR","KAZ","KGZ","LBN","MMR","PAK","VNM","ETH","UKR","ARM","GBR","NIR")))
length(unique(w7$country)) #48
w7_t <- w7
#making country factor
w7_t$country <- as.factor(w7_t$country)
#binary
w7_t <- w7_t %>% mutate(support=if_else(redistribution <5,1,0)) %>% relocate(support,.after = redistribution)
#constructing dummy codes
w7_t$second_step <- w7_t$third_step <- w7_t$fourth_step <- w7_t$fifth_step <- w7_t$sixth_step <- w7_t$seventh_step <- w7_t$eighth_step <- w7_t$ninth_step <- w7_t$tenth_step <- NA
w7_t$second_step <- ifelse(w7_t$subj_inc==2,1,0)
w7_t$third_step <- ifelse(w7_t$subj_inc==3,1,0)
w7_t$fourth_step <- ifelse(w7_t$subj_inc==4,1,0)
w7_t$fifth_step <- ifelse(w7_t$subj_inc==5,1,0)
w7_t$sixth_step <- ifelse(w7_t$subj_inc==6,1,0)
w7_t$seventh_step <- ifelse(w7_t$subj_inc==7,1,0)
w7_t$eighth_step <- ifelse(w7_t$subj_inc==8,1,0)
w7_t$ninth_step <- ifelse(w7_t$subj_inc==9,1,0)
w7_t$top_step <- ifelse(w7_t$subj_inc==10,1,0)
myscale_1 <- 1:5
w7_t <- w7_t %>% mutate(class_reversed=min(myscale_1) - class+max(myscale_1)) %>% relocate(class_reversed,.after = class)
w7_t$class_reversed <- as.numeric(w7_t$class_reversed)
#factor
w7_t$lower_class <- w7_t$class_reversed
w7_t$lower_class <- cut(w7_t$lower_class, breaks = c(0, 1, 2, 3, 4, 5),
labels = c("Lower class", "Working class", "Lower-middle class",
"Upper-middle class", "Higher class"))
w7_t$lower_class <-as.factor(w7_t$lower_class)
#binary
w7_t <- w7_t %>% mutate(left = if_else(ideology < 5, 1, 0)) %>% relocate(left,.after = ideology)
#ideology_reversed
myscale <- 1:10
w7_t <- w7_t %>% mutate(ideology_reversed=min(myscale) - ideology+max(myscale)) %>% relocate(ideology_reversed,.after = left)
#centrist
w7_t$centrist <- cut(w7_t$ideology, breaks = c(0, 4, 6, 10), labels = c("Left", "Centrist", "Right"))
w7_t$centrist <- relevel(w7_t$centrist, ref = "Right") #make Right reference group
w7_t$centrist <- as.factor(w7_t$centrist)
#binary
w7_t <- w7_t %>% mutate(effort = if_else(meritocracy > 4, 1, 0)) %>% relocate(effort,.after = meritocracy)
w7_t$unemployed <- ifelse(w7_t$employment_status %in% c(4:8),1,0)
w7_t$unionmem <- w7_t$union_membership
w7_t$unionmem[w7_t$unionmem %in% c(1,2)] <- 1
w7_t$relmem <- w7_t$religious_membership
w7_t$relmem[w7_t$relmem %in% c(1,2)] <- 1
#constructing dummy codes
w7_t$middle_edu <- w7_t$higher_edu <- NA
w7_t$middle_edu <- ifelse(w7_t$education==2,1,0)
w7_t$higher_edu <- ifelse(w7_t$education==3,1,0)
w7_t <- w7_t %>%
mutate(female = gender - 1) #now male becomes reference category 0
w7_t$married <- w7_t$marital_status
w7_t$married[w7_t$married %in% c(2:6)] <- 0
# loading data
unemployment <- read.csv("unemployment_rate_w7.csv")
unemployment <- unemployment %>% rename(country=w.country)
merged_data <- merge(w7_t, unemployment, by = "country", all.x = TRUE)
w7_t$u <- merged_data$unemployment_rate
sum(is.na(w7_t$u))
# copy age values to new column
w7_t$std_age <-w7_t$age
#scale age to have mean = 0 and standard deviation = 1
w7_t <- w7_t %>% mutate_at(c('std_age'), ~(scale(.) %>% as.vector)) %>% relocate(std_age,.after = age)
w7_t <- w7_t %>% mutate(.,inc_left=subj_inc*left)
w7_t <- w7_t %>% mutate(.,inc_cent=subj_inc*centrist)
w_complete <- w7_t
#income
w_complete$second_step_mean <- ave(w_complete$second_step,w_complete$country)
w_complete$third_step_mean <- ave(w_complete$third_step,w_complete$country)
w_complete$fourth_step_mean <- ave(w_complete$fourth_step,w_complete$country)
w_complete$fifth_step_mean <- ave(w_complete$fifth_step,w_complete$country)
w_complete$sixth_step_mean <- ave(w_complete$sixth_step,w_complete$country)
w_complete$seventh_step_mean <- ave(w_complete$seventh_step,w_complete$country)
w_complete$eighth_step_mean <- ave(w_complete$eighth_step,w_complete$country)
w_complete$ninth_step_mean <- ave(w_complete$ninth_step,w_complete$country)
w_complete$top_step_mean <- ave(w_complete$top_step,w_complete$country)
#ideology
w_complete$left_mean <- ave(w_complete$left,w_complete$country)
# effort
w_complete$effort_mean <- ave(w_complete$effort,w_complete$country)
#unemployed
w_complete$unemployed_mean <- ave(w_complete$unemployed,w_complete$country)
#unionmem
w_complete$unionmem_mean <- ave(w_complete$unionmem,w_complete$country)
#relmem
w_complete$relmem_mean <- ave(w_complete$relmem,w_complete$country)
#education
w_complete$middle_edu_mean <- ave(w_complete$middle_edu,w_complete$country)
w_complete$higher_edu_mean <- ave(w_complete$higher_edu,w_complete$country)
#gender
w_complete$female_mean <- ave(w_complete$female,w_complete$country)
#married
w_complete$married_mean <- ave(w_complete$married,w_complete$country)
#income
w_complete$second_step_cwc <- w_complete$second_step - w_complete$second_step_mean
w_complete$third_step_cwc <- w_complete$third_step - w_complete$third_step_mean
w_complete$fourth_step_cwc <- w_complete$fourth_step - w_complete$fourth_step_mean
w_complete$fifth_step_cwc <- w_complete$fifth_step - w_complete$fifth_step_mean
w_complete$sixth_step_cwc <- w_complete$sixth_step - w_complete$sixth_step_mean
w_complete$seventh_step_cwc <- w_complete$seventh_step - w_complete$seventh_step_mean
w_complete$eighth_step_cwc <- w_complete$eighth_step - w_complete$eighth_step_mean
w_complete$ninth_step_cwc <- w_complete$ninth_step - w_complete$ninth_step_mean
w_complete$top_step_cwc <- w_complete$top_step - w_complete$top_step_mean
#ideology
w_complete$left_cwc <- w_complete$left-w_complete$left_mean
# effort
w_complete$effort_cwc <- w_complete$effort-w_complete$effort_mean
#unemployed
w_complete$unemployed_cwc <- w_complete$unemployed-w_complete$unemployed_mean
#unionmem
w_complete$unionmem_cwc <- w_complete$unionmem-w_complete$unionmem_mean
#relmem
w_complete$relmem_cwc <- w_complete$relmem-w_complete$relmem_mean
#education
w_complete$middle_edu_cwc <- w_complete$middle_edu-w_complete$middle_edu_mean
w_complete$higher_edu_cwc <- w_complete$higher_edu-w_complete$higher_edu_mean
#gender
w_complete$female_cwc <-  w_complete$female- w_complete$female_mean
#married
w_complete$married_cwc <- w_complete$married-w_complete$married_mean
#adding labels for graphing purposes
library(expss)
#adding labels for graphing purposes
install.packages('expss')
library(expss)
w_complete = apply_labels(w_complete,
subj_inc = "Income",
left = "Left",
centrist = "Ideology (recoded)",
effort = "Effort",
unemployed = "Unemployed",
lower_class = "Class",
middle_edu = "Middle-level education",
higher_edu = "Higher-level education",
married = "Marital status",
female = "Female",
std_age = "Age (Standardised)",
relmem = "Religious member",
unionmem = "Union member",
u = "Unemployment rate",
second_step_cwc = "Second step",
third_step_cwc = "Third step",
fourth_step_cwc = "Fourth step",
fifth_step_cwc = "Fifth step",
sixth_step_cwc = "Sixth step",
seventh_step_cwc = "Seventh step",
eighth_step_cwc = "Eighth step",
ninth_step_cwc = "Ninth step",
top_step_cwc = "Top step"
)
knitr::opts_chunk$set(echo = TRUE)
library(lme4)
install.packages('lme4')
library(lme4)
null <- glmer(support~(1|country), family = binomial("logit"),data=w_complete)
summary(null)
m0_mlm <- glmer(support ~ subj_inc + left + (1 | country), data = w_complete, family = binomial(link = "logit")) #no controls
m1_mlm <- glmer(support ~  subj_inc + left  + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age + female + married + (1 | country), data = w_complete, family=binomial(link = "logit")) #add controls
m2_mlm <- glmer(support ~  subj_inc + left  + subj_inc*left + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age + female + married + (1 | country), data = w_complete, family = binomial(link = "logit")) #add interaction term
m3_mlm <- glmer(support ~  subj_inc + left  + effort + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age + female + married + (1 | country), data = w_complete, family = binomial(link = "logit")) #add effort, no interaction term
m4_mlm <- glmer(support ~  subj_inc + left  + subj_inc*left + effort + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age + female + married + u + (1 | country), data = w_complete, family = binomial(link = "logit")) #add group-level predictor
colors=c("firebrick","dodgerblue4")
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
library(sjPlot)
library(ggplot2)
install.packages('sjPlot')
colors=c("firebrick","dodgerblue4")
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
install.packages('stargazer')
colors=c("firebrick","dodgerblue4")
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
library(sjPlot)
colors=c("firebrick","dodgerblue4")
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1)) +
theme(panel.background = element_blank())
pdf("int_model.pdf")
colors=c("firebrick","dodgerblue4")
plot_model(m4_mlm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
scale_color_manual(limits = c("0", "1"), labels = c("Right", "Left"),values = colors, name = "Ideology") +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1)) +
theme(panel.background = element_blank())
m4_clustered_cent <- coeftest(m4_glm_cent, cluster.vcov(m4_glm_cent, w_complete$country))
m4_glm_cent <- glm(support ~ subj_inc + centrist + subj_inc*centrist + effort + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age +  female + married + u + country, data = w_complete, family = binomial(link = "logit"))
m4_clustered_cent <- coeftest(m4_glm_cent, cluster.vcov(m4_glm_cent, w_complete$country))
library(lmtest)
m4_glm_cent <- glm(support ~ subj_inc + centrist + subj_inc*centrist + effort + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age +  female + married + u + country, data = w_complete, family = binomial(link = "logit"))
m4_clustered_cent <- coeftest(m4_glm_cent, cluster.vcov(m4_glm_cent, w_complete$country))
library(multiwayvcov)
library(lmtest)
m4_glm_cent <- glm(support ~ subj_inc + centrist + subj_inc*centrist + effort + unemployed + unionmem + relmem + middle_edu + higher_edu + std_age +  female + married + u + country, data = w_complete, family = binomial(link = "logit"))
m4_clustered_cent <- coeftest(m4_glm_cent, cluster.vcov(m4_glm_cent, w_complete$country))
plot_model(m4_glm, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
plot_model(m4_glm_cent, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1))
plot_model(m4_glm_cent, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1)) +
theme(panel.background = element_blank())
pdf("int_model_cent.pdf")
plot_model(m4_glm_cent, type = "int", axis.title = "", ci.lvl = 0.95, show.p = TRUE) +
ggtitle("Predicted probabilities of support") +
theme(plot.title = element_text(color = "black")) +
xlab("Income") + ylab("Support for Redistribution") +
theme(axis.title.x = element_text(face = "bold", size = 14)) +
theme(axis.title.y = element_text(face = "bold", size = 14)) +
theme(axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1)) +
scale_x_continuous(breaks = seq(1, 10, by = 1), labels = seq(1, 10, by = 1)) +
theme(panel.background = element_blank())
# We can index a list with brackets
print(num_list["two"])
# Lists in R are similar to dictionaries in Python
x <- c(1, 2, 3, 4, 5)
num_list <- list(one = x,
two = c("one", "two", "three"),
three = matrix(data = 1:6, nrow = 3, ncol = 3))
# NOTE: matrix() creates a matrix (table) from a given set of values
print(num_list)
# We can index a list with brackets
print(num_list["two"])
# We can also index specific elements with $
print(num_list$two)
# We can access data inside a list element by combining double and single brackets
# By using the double brackets, the list structure is dropped
print(num_list[["two"]])
print(class(num_list["two"]))
print(class(num_list[["two"]]))
library(tidyverse)
library(tidyverse)
# You might have noticed that your code in R often contains many parentheses.
# When you have complex code, this will often mean that you will have to nest
# those parentheses together. This makes your R code hard to read and understand.
# The pipe operator is for this exact purpose.
x <- c(0.322, 0.237, 0.342, 0.983, 0.987 , 0.991, 0.129)
# Compute the logarithm of x, compute the exponential function, round the result
round(exp(log(x)), 1)
# With pipe this is:
x %>% log() %>%
exp() %>%
round(1)
# NOTE: You don't need to include the brackets (i.e. log()) here,
# but doing so increases the legibility of your code.
